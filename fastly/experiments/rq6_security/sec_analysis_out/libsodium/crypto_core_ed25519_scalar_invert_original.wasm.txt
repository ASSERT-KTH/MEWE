Input file: wasms/libsodium/crypto_core_ed25519_scalar_invert_original.wasm
  binary:    crypto_core_ed25519_scalar_invert_original.wasm

Functions:         2329
  Imported:          24
  Non-imported:    2305
  Exported:           2

Tables: 1 (should be 1 in Wasm v1)
  Table entries at init:        287
  Of those, unique functions:   287 (i.e., at least 12.32% of all functions can be called indirectly, because they are in the [indirect call] table)

Instructions:    255803
  call:            5159 (2.02% of all instructions)
  call_indirect:    137 (0.05% of all instructions, 2.59% of all calls)

Globals:
  #0 i32
     init: i32.const 1048576
     2058 × global.get   2713 × global.set   4771 total (43/57% split)
  #1 i32
     export: ["__heap_base"]
     init: i32.const 1081884
        0 × global.get      0 × global.set      0 total
  #2 i32
     export: ["__data_end"]
     init: i32.const 1081884
        0 × global.get      0 × global.set      0 total

Likely the stack pointer:       Global #0
Functions using stack pointer:   2058 (89.28% of all non-imported functions)
Stack increments: (How many functions increment the stack pointer by how much? Can also handle multiple increments per function, that's why it is an array of increments.)
    1  (0.04%) × [-1056]
    1  (0.04%) × [-736]
    1  (0.04%) × [-144]
    1  (0.04%) × [-96]
    3  (0.13%) × [-112]
    3  (0.13%) × [-80]
    8  (0.35%) × [-128]
   10  (0.43%) × [-64]
   16  (0.69%) × [-48]
   37  (1.61%) × [-32]
   39  (1.69%) × [-16]
 2185 (94.79%) × []
  functions with stack allocation total: 120 (5.21%)

CSV for sp analysis and plots:
binary,funccount,percent,sp_increments,increment_sum,increment_sum_abs
sp_csv_line:"crypto_core_ed25519_scalar_invert_original.wasm",1,0.04338395,"[-1056]",-1056,1056
sp_csv_line:"crypto_core_ed25519_scalar_invert_original.wasm",1,0.04338395,"[-736]",-736,736
sp_csv_line:"crypto_core_ed25519_scalar_invert_original.wasm",1,0.04338395,"[-144]",-144,144
sp_csv_line:"crypto_core_ed25519_scalar_invert_original.wasm",1,0.04338395,"[-96]",-96,96
sp_csv_line:"crypto_core_ed25519_scalar_invert_original.wasm",3,0.13015184,"[-112]",-112,112
sp_csv_line:"crypto_core_ed25519_scalar_invert_original.wasm",3,0.13015184,"[-80]",-80,80
sp_csv_line:"crypto_core_ed25519_scalar_invert_original.wasm",8,0.3470716,"[-128]",-128,128
sp_csv_line:"crypto_core_ed25519_scalar_invert_original.wasm",10,0.43383947,"[-64]",-64,64
sp_csv_line:"crypto_core_ed25519_scalar_invert_original.wasm",16,0.6941432,"[-48]",-48,48
sp_csv_line:"crypto_core_ed25519_scalar_invert_original.wasm",37,1.6052061,"[-32]",-32,32
sp_csv_line:"crypto_core_ed25519_scalar_invert_original.wasm",39,1.6919739,"[-16]",-16,16
sp_csv_line:"crypto_core_ed25519_scalar_invert_original.wasm",2185,94.79393,"[]",0,0

Counts of function types (41 unique types):
    1  (0.04%) × [i32, i32, i32, i32] -> [i64]
    1  (0.04%) × [i32, i32, i32, i32, i32, i32, i32, i32] -> [i32]
    1  (0.04%) × [i32, i32, i64] -> []
    1  (0.04%) × [i32, i64] -> [i32]
    1  (0.04%) × [i32, i64, i32] -> [i32]
    1  (0.04%) × [i32, i64, i32, i32] -> [i32]
    1  (0.04%) × [i32, i64, i64, i64, i64] -> []
    1  (0.04%) × [i64] -> [i32]
    1  (0.04%) × [i64, i32, i32] -> []
    1  (0.04%) × [i64, i32, i32] -> [i32]
    1  (0.04%) × [i64, i32, i32, i32] -> []
    1  (0.04%) × [i64, i64] -> []
    1  (0.04%) × [i64, i64, i32, i32] -> [i32]
    2  (0.09%) × [i32, i32, i64, i64] -> []
    2  (0.09%) × [i32, i64] -> []
    2  (0.09%) × [i32, i64, i32] -> [i64]
    2  (0.09%) × [i64, i32] -> [i64]
    2  (0.09%) × [i64, i32, i32, i32] -> [i32]
    3  (0.13%) × [i32, i32, i32, i32, i32, i32, i32, i32] -> []
    3  (0.13%) × [i32, i64, i64] -> []
    3  (0.13%) × [i64, i64] -> [i64]
    5  (0.21%) × [i32, i32] -> [i64]
    5  (0.21%) × [i32, i32, i32, i32, i32, i32] -> [i32]
    6  (0.26%) × [i32, i32, i32, i32, i32] -> [i32]
    6  (0.26%) × [i64] -> [i64]
    9  (0.39%) × [i32, i32, i32, i32, i32, i32, i32] -> []
   14  (0.60%) × [i32, i32, i32] -> [i64]
   14  (0.60%) × [i32, i32, i32, i32, i32, i32] -> []
   16  (0.69%) × [] -> [i64]
   25  (1.07%) × [] -> [i32]
   31  (1.33%) × [i32, i32, i32, i32] -> [i32]
   32  (1.37%) × [i32] -> [i64]
   36  (1.55%) × [] -> []
   65  (2.79%) × [i32, i32, i32] -> [i32]
   70  (3.01%) × [i32, i32, i32, i32, i32] -> []
  101  (4.34%) × [i32, i32, i32, i32] -> []
  322 (13.83%) × [i32] -> []
  338 (14.51%) × [i32, i32] -> [i32]
  369 (15.84%) × [i32, i32] -> []
  414 (17.78%) × [i32] -> [i32]
  419 (17.99%) × [i32, i32, i32] -> []

Functions with at least one call_indirect: 69 (2.99% of all functions)

Table elements initialization:
         range: [    1,    2]   length:   2   unique funcs:    2   type: [i32, i32] -> [i32]
         range: [    3,    3]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [    4,    5]   length:   2   unique funcs:    2   type: [i32] -> [i32]
         range: [    6,    9]   length:   4   unique funcs:    4   type: [i32, i32] -> [i32]
         range: [   10,   10]   length:   1   unique funcs:    1   type: [] -> [i32]
         range: [   11,   11]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   12,   12]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   13,   13]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   14,   14]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   15,   15]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   16,   16]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   17,   17]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   18,   18]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   19,   19]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   20,   20]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   21,   21]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   22,   22]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   23,   23]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   24,   24]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   25,   25]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   26,   27]   length:   2   unique funcs:    2   type: [i32, i32] -> [i32]
         range: [   28,   28]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   29,   29]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [   30,   30]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [   31,   32]   length:   2   unique funcs:    2   type: [i32, i32] -> []
         range: [   33,   33]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   34,   34]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   35,   35]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   36,   36]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [   37,   37]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [   38,   39]   length:   2   unique funcs:    2   type: [i32, i32] -> []
         range: [   40,   43]   length:   4   unique funcs:    4   type: [i32, i32] -> [i32]
         range: [   44,   44]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   45,   45]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [   46,   46]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   47,   47]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   48,   48]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   49,   50]   length:   2   unique funcs:    2   type: [i32, i32] -> []
         range: [   51,   51]   length:   1   unique funcs:    1   type: [i32, i64] -> [i32]
         range: [   52,   52]   length:   1   unique funcs:    1   type: [i32, i64] -> []
         range: [   53,   53]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   54,   54]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   55,   55]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [   56,   56]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [   57,   58]   length:   2   unique funcs:    2   type: [i32, i32] -> []
         range: [   59,   60]   length:   2   unique funcs:    2   type: [i32, i32] -> [i32]
         range: [   61,   61]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   62,   62]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   63,   63]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   64,   64]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   65,   65]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   66,   67]   length:   2   unique funcs:    2   type: [i32, i32] -> []
         range: [   68,   68]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   69,   69]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [   70,   70]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   71,   71]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   72,   72]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [   73,   74]   length:   2   unique funcs:    2   type: [i32, i32] -> [i32]
         range: [   75,   75]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   76,   76]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   77,   77]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   78,   78]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   79,   79]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   80,   80]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [   81,   84]   length:   4   unique funcs:    4   type: [i32, i32] -> [i32]
         range: [   85,   85]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   86,   86]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   87,   87]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   88,   88]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   89,   89]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   90,   90]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [   91,   91]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [   92,   92]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [   93,   93]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [   94,   94]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [   95,   96]   length:   2   unique funcs:    2   type: [i32, i32] -> []
         range: [   97,   98]   length:   2   unique funcs:    2   type: [i32, i32] -> [i32]
         range: [   99,   99]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  100,  100]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [  101,  101]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [  102,  102]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [  103,  104]   length:   2   unique funcs:    2   type: [i32, i32] -> []
         range: [  105,  105]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [  106,  106]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  107,  107]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [  108,  108]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [  109,  109]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [  110,  111]   length:   2   unique funcs:    2   type: [i32, i32] -> []
         range: [  112,  113]   length:   2   unique funcs:    2   type: [i32, i32] -> [i32]
         range: [  114,  114]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  115,  115]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [  116,  116]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [  117,  117]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [  118,  119]   length:   2   unique funcs:    2   type: [i32, i32] -> []
         range: [  120,  120]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [  121,  121]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  122,  122]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [  123,  123]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [  124,  124]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [  125,  126]   length:   2   unique funcs:    2   type: [i32, i32] -> []
         range: [  127,  127]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [  128,  128]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  129,  129]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [  130,  130]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [  131,  131]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [  132,  133]   length:   2   unique funcs:    2   type: [i32, i32] -> []
         range: [  134,  135]   length:   2   unique funcs:    2   type: [i32, i32] -> [i32]
         range: [  136,  136]   length:   1   unique funcs:    1   type: [] -> [i32]
         range: [  137,  139]   length:   3   unique funcs:    3   type: [i32, i32] -> [i32]
         range: [  140,  140]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> []
         range: [  141,  141]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> []
         range: [  142,  142]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  143,  143]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [  144,  144]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  145,  146]   length:   2   unique funcs:    2   type: [i32, i32] -> []
         range: [  147,  147]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  148,  148]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [  149,  149]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  150,  150]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [  151,  151]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> []
         range: [  152,  152]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> []
         range: [  153,  153]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  154,  154]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [  155,  155]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> []
         range: [  156,  156]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> []
         range: [  157,  157]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> []
         range: [  158,  158]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> []
         range: [  159,  159]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> []
         range: [  160,  160]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> []
         range: [  161,  161]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  162,  165]   length:   4   unique funcs:    4   type: [i32, i32] -> [i32]
         range: [  166,  166]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> []
         range: [  167,  167]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> []
         range: [  168,  169]   length:   2   unique funcs:    2   type: [i32] -> []
         range: [  170,  170]   length:   1   unique funcs:    1   type: [i32, i32] -> [i32]
         range: [  171,  171]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> []
         range: [  172,  172]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> []
         range: [  173,  173]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> []
         range: [  174,  174]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> []
         range: [  175,  175]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> []
         range: [  176,  176]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> []
         range: [  177,  177]   length:   1   unique funcs:    1   type: [i32, i32, i32, i32] -> []
         range: [  178,  178]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> []
         range: [  179,  184]   length:   6   unique funcs:    6   type: [i32, i32] -> [i32]
         range: [  185,  185]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [  186,  187]   length:   2   unique funcs:    2   type: [i32, i32] -> [i32]
         range: [  188,  188]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  189,  189]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [  190,  191]   length:   2   unique funcs:    2   type: [i32, i32] -> [i32]
         range: [  192,  192]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [  193,  194]   length:   2   unique funcs:    2   type: [i32, i32] -> [i32]
         range: [  195,  195]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [  196,  197]   length:   2   unique funcs:    2   type: [i32, i32] -> [i32]
         range: [  198,  198]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [  199,  201]   length:   3   unique funcs:    3   type: [i32, i32] -> [i32]
         range: [  202,  202]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [  203,  203]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  204,  208]   length:   5   unique funcs:    5   type: [i32, i32] -> [i32]
         range: [  209,  209]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  210,  212]   length:   3   unique funcs:    3   type: [i32, i32] -> [i32]
         range: [  213,  213]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  214,  214]   length:   1   unique funcs:    1   type: [i32, i32] -> []
         range: [  215,  215]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [  216,  216]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [  217,  219]   length:   3   unique funcs:    3   type: [i32, i32] -> [i32]
         range: [  220,  220]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  221,  221]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [  222,  223]   length:   2   unique funcs:    2   type: [i32, i32] -> [i32]
         range: [  224,  224]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [  225,  226]   length:   2   unique funcs:    2   type: [i32, i32] -> [i32]
         range: [  227,  227]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [  228,  229]   length:   2   unique funcs:    2   type: [i32, i32] -> [i32]
         range: [  230,  233]   length:   4   unique funcs:    4   type: [i32, i32] -> []
         range: [  234,  235]   length:   2   unique funcs:    2   type: [i32, i32, i32, i32] -> []
         range: [  236,  236]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [  237,  237]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [  238,  239]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i64]
         range: [  240,  240]   length:   1   unique funcs:    1   type: [i32, i32] -> [i64]
         range: [  241,  242]   length:   2   unique funcs:    2   type: [i32, i32, i32, i32] -> []
         range: [  243,  243]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [  244,  244]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [  245,  246]   length:   2   unique funcs:    2   type: [i32, i32, i32] -> [i64]
         range: [  247,  247]   length:   1   unique funcs:    1   type: [i32, i32] -> [i64]
         range: [  248,  248]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  249,  252]   length:   4   unique funcs:    4   type: [i32, i32] -> []
         range: [  253,  254]   length:   2   unique funcs:    2   type: [i32] -> [i64]
         range: [  255,  256]   length:   2   unique funcs:    2   type: [i32, i32] -> []
         range: [  257,  259]   length:   3   unique funcs:    3   type: [i32, i32] -> [i32]
         range: [  260,  260]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  261,  262]   length:   2   unique funcs:    2   type: [i32, i32] -> [i32]
         range: [  263,  263]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  264,  264]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [  265,  272]   length:   8   unique funcs:    8   type: [i32, i32] -> [i32]
         range: [  273,  273]   length:   1   unique funcs:    1   type: [i32] -> []
         range: [  274,  274]   length:   1   unique funcs:    1   type: [i32] -> [i64]
         range: [  275,  275]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [  276,  278]   length:   3   unique funcs:    3   type: [i32, i32] -> [i32]
         range: [  279,  279]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [  280,  284]   length:   5   unique funcs:    5   type: [i32, i32] -> [i32]
         range: [  285,  285]   length:   1   unique funcs:    1   type: [i32] -> [i32]
         range: [  286,  286]   length:   1   unique funcs:    1   type: [i32, i32, i32] -> [i32]
         range: [  287,  287]   length:   1   unique funcs:    1   type: [i32, i64, i32] -> [i64]
  202 table init ranges in total

Patterns (=preceding instructions) of call_indirect:
     2 × unrestricted                         source: local.(get|tee)   type [] -> [i32]
         functions matching by type (regardless whether they are in the table):               25
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
    17 × unrestricted                         source:   i32.load   type [i32] -> []
         functions matching by type (regardless whether they are in the table):              322
         functions matching by type and present in table (regardless at which table index):   48
         functions matching by type and present in permissable table index range:             48
     3 × unrestricted                         source: local.(get|tee)   type [i32] -> []
         functions matching by type (regardless whether they are in the table):              322
         functions matching by type and present in table (regardless at which table index):   48
         functions matching by type and present in permissable table index range:             48
     1 × unrestricted                         source:   i32.load   type [i32] -> [i32]
         functions matching by type (regardless whether they are in the table):              414
         functions matching by type and present in table (regardless at which table index):   15
         functions matching by type and present in permissable table index range:             15
     2 × unrestricted                         source:   i32.load   type [i32] -> [i64]
         functions matching by type (regardless whether they are in the table):               32
         functions matching by type and present in table (regardless at which table index):   19
         functions matching by type and present in permissable table index range:             19
     1 × unrestricted                         source: local.(get|tee)   type [i32] -> [i64]
         functions matching by type (regardless whether they are in the table):               32
         functions matching by type and present in table (regardless at which table index):   19
         functions matching by type and present in permissable table index range:             19
     1 × unrestricted                         source:      other   type [i32, i32] -> []
         functions matching by type (regardless whether they are in the table):              369
         functions matching by type and present in table (regardless at which table index):   45
         functions matching by type and present in permissable table index range:             45
     4 × unrestricted                         source:   i32.load   type [i32, i32] -> []
         functions matching by type (regardless whether they are in the table):              369
         functions matching by type and present in table (regardless at which table index):   45
         functions matching by type and present in permissable table index range:             45
     6 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> []
         functions matching by type (regardless whether they are in the table):              369
         functions matching by type and present in table (regardless at which table index):   45
         functions matching by type and present in permissable table index range:             45
    26 × unrestricted                         source:   i32.load   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):              338
         functions matching by type and present in table (regardless at which table index):  112
         functions matching by type and present in permissable table index range:            112
     6 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):              338
         functions matching by type and present in table (regardless at which table index):  112
         functions matching by type and present in permissable table index range:            112
     3 × unrestricted                         source: local.(get|tee)   type [i32, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                5
         functions matching by type and present in table (regardless at which table index):    2
         functions matching by type and present in permissable table index range:              2
     2 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32] -> []
         functions matching by type (regardless whether they are in the table):              419
         functions matching by type and present in table (regardless at which table index):   10
         functions matching by type and present in permissable table index range:             10
    50 × unrestricted                         source:   i32.load   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               65
         functions matching by type and present in table (regardless at which table index):   13
         functions matching by type and present in permissable table index range:             13
     6 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32] -> [i32]
         functions matching by type (regardless whether they are in the table):               65
         functions matching by type and present in table (regardless at which table index):   13
         functions matching by type and present in permissable table index range:             13
     3 × unrestricted                         source: local.(get|tee)   type [i32, i32, i32, i32] -> []
         functions matching by type (regardless whether they are in the table):              101
         functions matching by type and present in table (regardless at which table index):   14
         functions matching by type and present in permissable table index range:             14
     4 × unrestricted                         source:   i32.load   type [i32, i64, i32] -> [i64]
         functions matching by type (regardless whether they are in the table):                2
         functions matching by type and present in table (regardless at which table index):    1
         functions matching by type and present in permissable table index range:              1
  17 call_indirect patterns in total


call_indirect target equivalence classes (CFI equivalence classes):
  class #0
    type: [i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 15
    count (how often class appears): 1
  class #1
    type: [i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 19
    count (how often class appears): 1
  class #2
    type: [i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 45
    count (how often class appears): 1
  class #3
    type: [] -> [i32]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 2
  class #4
    type: [i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 19
    count (how often class appears): 2
  class #5
    type: [i32, i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 10
    count (how often class appears): 2
  class #6
    type: [i32] -> []
    start idx: None, end idx: None
    size (of class): 48
    count (how often class appears): 3
  class #7
    type: [i32, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 2
    count (how often class appears): 3
  class #8
    type: [i32, i32, i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 14
    count (how often class appears): 3
  class #9
    type: [i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 45
    count (how often class appears): 4
  class #10
    type: [i32, i64, i32] -> [i64]
    start idx: None, end idx: None
    size (of class): 1
    count (how often class appears): 4
  class #11
    type: [i32, i32] -> []
    start idx: None, end idx: None
    size (of class): 45
    count (how often class appears): 6
  class #12
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 112
    count (how often class appears): 6
  class #13
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 13
    count (how often class appears): 6
  class #14
    type: [i32] -> []
    start idx: None, end idx: None
    size (of class): 48
    count (how often class appears): 17
  class #15
    type: [i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 112
    count (how often class appears): 26
  class #16
    type: [i32, i32, i32] -> [i32]
    start idx: None, end idx: None
    size (of class): 13
    count (how often class appears): 50
  total classes: 17

CSV data for further analysis: crypto_core_ed25519_scalar_invert_original.wasm,255803,5159,137,2.586858,2329,287,253,17,1,50,8.058823529411764,3,26679,5915,22.170996,5915,22.170996,4615,17.29825

CSV data on CFI classes:
benchmark,binary,class,size,count,source
"crypto_core_ed25519_scalar_invert_original.wasm",0,15,1,"i32.load"
"crypto_core_ed25519_scalar_invert_original.wasm",1,19,1,"local.(get|tee)"
"crypto_core_ed25519_scalar_invert_original.wasm",2,45,1,"other"
"crypto_core_ed25519_scalar_invert_original.wasm",3,2,2,"local.(get|tee)"
"crypto_core_ed25519_scalar_invert_original.wasm",4,19,2,"i32.load"
"crypto_core_ed25519_scalar_invert_original.wasm",5,10,2,"local.(get|tee)"
"crypto_core_ed25519_scalar_invert_original.wasm",6,48,3,"local.(get|tee)"
"crypto_core_ed25519_scalar_invert_original.wasm",7,2,3,"local.(get|tee)"
"crypto_core_ed25519_scalar_invert_original.wasm",8,14,3,"local.(get|tee)"
"crypto_core_ed25519_scalar_invert_original.wasm",9,45,4,"i32.load"
"crypto_core_ed25519_scalar_invert_original.wasm",10,1,4,"i32.load"
"crypto_core_ed25519_scalar_invert_original.wasm",11,45,6,"local.(get|tee)"
"crypto_core_ed25519_scalar_invert_original.wasm",12,112,6,"local.(get|tee)"
"crypto_core_ed25519_scalar_invert_original.wasm",13,13,6,"local.(get|tee)"
"crypto_core_ed25519_scalar_invert_original.wasm",14,48,17,"i32.load"
"crypto_core_ed25519_scalar_invert_original.wasm",15,112,26,"i32.load"
"crypto_core_ed25519_scalar_invert_original.wasm",16,13,50,"i32.load"
